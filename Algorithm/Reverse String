'''
344. Reverse String

Write a function that reverses a string. The input string is given as an array of characters s.

You must do this by modifying the input array in-place with O(1) extra memory.

 

Example 1:

Input: s = ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]
Example 2:

Input: s = ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]
'''

# first version
# 最大、最小對調
# Runtime: 709 ms, Memory Usage: 18.5 MB
class Solution:
    def reverseString(self, s: List[str]) -> None:
        """
        Do not return anything, modify s in-place instead.
        """
        i = 0
        while i<len(s)//2:
          mini = s[i]
          maxi = s[-i-1]
          s[i] = maxi
          s[-i-1] = mini
          i+=1

# second version
# 使用for 替代 while
# Runtime: 548 ms, Memory Usage: 18.4 MB
class Solution:
    def reverseString(self, s: List[str]) -> None:
        """
        Do not return anything, modify s in-place instead.
        """
        for i in range(len(s)//2):
            s[i], s[-i-1] = s[-i-1], s[i]
            # same as
            # ~為倒過來
            # s[i], s[~i] = s[~i], s[i]

# 利用ord、chr與^=運算符號
# Runtime: 496 ms, Memory Usage: 18.5 MB
class Solution:
    def reverseString(self, s: List[str]) -> None:
        """
        Do not return anything, modify s in-place instead.
        """
        n = len(s)
        i , j = 0 , n-1
        
        while i<j:
            # 將字母換成unicode形式
            s[i] = ord(s[i])     
            s[j] = ord(s[j])
            # swapping operation
            # 第一數值 1100101 (104)
            # 第二數值 1101000 (101)
            # 兩數之差 0001101 = 13
            # 104 與 101差異 13
            
            # 經過流程後會前後互換
            s[i]^=s[j]           
            s[j]^=s[i]
            s[i]^=s[j]
            # 換回字母
            s[i] = chr(s[i])
            s[j] = chr(s[j])
            i+=1                   
            j-=1
            
        
        
        
